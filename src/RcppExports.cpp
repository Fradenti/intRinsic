// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// log_Likelihood_double
double log_Likelihood_double(double mu_obs, double d);
RcppExport SEXP _intRinsic_log_Likelihood_double(SEXP mu_obsSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type mu_obs(mu_obsSEXP);
    Rcpp::traits::input_parameter< double >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(log_Likelihood_double(mu_obs, d));
    return rcpp_result_gen;
END_RCPP
}
// Groups_quantities
arma::mat Groups_quantities(arma::colvec mu_obser, arma::vec Ci, int K);
RcppExport SEXP _intRinsic_Groups_quantities(SEXP mu_obserSEXP, SEXP CiSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type mu_obser(mu_obserSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Ci(CiSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(Groups_quantities(mu_obser, Ci, K));
    return rcpp_result_gen;
END_RCPP
}
// Norm_Constant_Z_l2
double Norm_Constant_Z_l2(int Nzi_l, int N, double xi, int q);
RcppExport SEXP _intRinsic_Norm_Constant_Z_l2(SEXP Nzi_lSEXP, SEXP NSEXP, SEXP xiSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type Nzi_l(Nzi_lSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(Norm_Constant_Z_l2(Nzi_l, N, xi, q));
    return rcpp_result_gen;
END_RCPP
}
// index_row_col
List index_row_col(arma::mat Nq, int q, int N);
RcppExport SEXP _intRinsic_index_row_col(SEXP NqSEXP, SEXP qSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Nq(NqSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(index_row_col(Nq, q, N));
    return rcpp_result_gen;
END_RCPP
}
// Update_memberships_faster
arma::colvec Update_memberships_faster(arma::colvec mu_obser, arma::colvec dl, arma::colvec pl, int K, int N, int q, arma::colvec possible_label, arma::colvec Ci, double QQ, arma::umat index_row, List index_col, arma::colvec log_Precomp_Z, arma::colvec log_Precomp_ratios);
RcppExport SEXP _intRinsic_Update_memberships_faster(SEXP mu_obserSEXP, SEXP dlSEXP, SEXP plSEXP, SEXP KSEXP, SEXP NSEXP, SEXP qSEXP, SEXP possible_labelSEXP, SEXP CiSEXP, SEXP QQSEXP, SEXP index_rowSEXP, SEXP index_colSEXP, SEXP log_Precomp_ZSEXP, SEXP log_Precomp_ratiosSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type mu_obser(mu_obserSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type dl(dlSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type pl(plSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type possible_label(possible_labelSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Ci(CiSEXP);
    Rcpp::traits::input_parameter< double >::type QQ(QQSEXP);
    Rcpp::traits::input_parameter< arma::umat >::type index_row(index_rowSEXP);
    Rcpp::traits::input_parameter< List >::type index_col(index_colSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type log_Precomp_Z(log_Precomp_ZSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type log_Precomp_ratios(log_Precomp_ratiosSEXP);
    rcpp_result_gen = Rcpp::wrap(Update_memberships_faster(mu_obser, dl, pl, K, N, q, possible_label, Ci, QQ, index_row, index_col, log_Precomp_Z, log_Precomp_ratios));
    return rcpp_result_gen;
END_RCPP
}
// Postprocessing_Chains
arma::mat Postprocessing_Chains(arma::mat labels, arma::mat IDs);
RcppExport SEXP _intRinsic_Postprocessing_Chains(SEXP labelsSEXP, SEXP IDsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type labels(labelsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type IDs(IDsSEXP);
    rcpp_result_gen = Rcpp::wrap(Postprocessing_Chains(labels, IDs));
    return rcpp_result_gen;
END_RCPP
}
// rtgamma_once
double rtgamma_once(double shape, double rate, double lb, double ub);
RcppExport SEXP _intRinsic_rtgamma_once(SEXP shapeSEXP, SEXP rateSEXP, SEXP lbSEXP, SEXP ubSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type shape(shapeSEXP);
    Rcpp::traits::input_parameter< double >::type rate(rateSEXP);
    Rcpp::traits::input_parameter< double >::type lb(lbSEXP);
    Rcpp::traits::input_parameter< double >::type ub(ubSEXP);
    rcpp_result_gen = Rcpp::wrap(rtgamma_once(shape, rate, lb, ub));
    return rcpp_result_gen;
END_RCPP
}
// UPD_d_TRUNC
arma::colvec UPD_d_TRUNC(List AIFD, double a0, double b0, int K, double D);
RcppExport SEXP _intRinsic_UPD_d_TRUNC(SEXP AIFDSEXP, SEXP a0SEXP, SEXP b0SEXP, SEXP KSEXP, SEXP DSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type AIFD(AIFDSEXP);
    Rcpp::traits::input_parameter< double >::type a0(a0SEXP);
    Rcpp::traits::input_parameter< double >::type b0(b0SEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< double >::type D(DSEXP);
    rcpp_result_gen = Rcpp::wrap(UPD_d_TRUNC(AIFD, a0, b0, K, D));
    return rcpp_result_gen;
END_RCPP
}
// UPD_d_TRUNC_MASS
arma::colvec UPD_d_TRUNC_MASS(List AIFD, double a0, double b0, int K, double D, double piMass);
RcppExport SEXP _intRinsic_UPD_d_TRUNC_MASS(SEXP AIFDSEXP, SEXP a0SEXP, SEXP b0SEXP, SEXP KSEXP, SEXP DSEXP, SEXP piMassSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type AIFD(AIFDSEXP);
    Rcpp::traits::input_parameter< double >::type a0(a0SEXP);
    Rcpp::traits::input_parameter< double >::type b0(b0SEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< double >::type D(DSEXP);
    Rcpp::traits::input_parameter< double >::type piMass(piMassSEXP);
    rcpp_result_gen = Rcpp::wrap(UPD_d_TRUNC_MASS(AIFD, a0, b0, K, D, piMass));
    return rcpp_result_gen;
END_RCPP
}
// gride_log_likelihood
double gride_log_likelihood(double d, int n1, int n2, arma::colvec mus_n1_n2);
RcppExport SEXP _intRinsic_gride_log_likelihood(SEXP dSEXP, SEXP n1SEXP, SEXP n2SEXP, SEXP mus_n1_n2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< int >::type n2(n2SEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type mus_n1_n2(mus_n1_n2SEXP);
    rcpp_result_gen = Rcpp::wrap(gride_log_likelihood(d, n1, n2, mus_n1_n2));
    return rcpp_result_gen;
END_RCPP
}
// gride_log_posterior
double gride_log_posterior(double z, int n1, int n2, double a_d, double b_d, arma::colvec mus_n1_n2);
RcppExport SEXP _intRinsic_gride_log_posterior(SEXP zSEXP, SEXP n1SEXP, SEXP n2SEXP, SEXP a_dSEXP, SEXP b_dSEXP, SEXP mus_n1_n2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< int >::type n2(n2SEXP);
    Rcpp::traits::input_parameter< double >::type a_d(a_dSEXP);
    Rcpp::traits::input_parameter< double >::type b_d(b_dSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type mus_n1_n2(mus_n1_n2SEXP);
    rcpp_result_gen = Rcpp::wrap(gride_log_posterior(z, n1, n2, a_d, b_d, mus_n1_n2));
    return rcpp_result_gen;
END_RCPP
}
// gride_mh_sampler
arma::colvec gride_mh_sampler(double start_d, int n1, int n2, double a_d, double b_d, arma::colvec mus_n1_n2, int nsim, int burn_in, double sigma);
RcppExport SEXP _intRinsic_gride_mh_sampler(SEXP start_dSEXP, SEXP n1SEXP, SEXP n2SEXP, SEXP a_dSEXP, SEXP b_dSEXP, SEXP mus_n1_n2SEXP, SEXP nsimSEXP, SEXP burn_inSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type start_d(start_dSEXP);
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< int >::type n2(n2SEXP);
    Rcpp::traits::input_parameter< double >::type a_d(a_dSEXP);
    Rcpp::traits::input_parameter< double >::type b_d(b_dSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type mus_n1_n2(mus_n1_n2SEXP);
    Rcpp::traits::input_parameter< int >::type nsim(nsimSEXP);
    Rcpp::traits::input_parameter< int >::type burn_in(burn_inSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(gride_mh_sampler(start_d, n1, n2, a_d, b_d, mus_n1_n2, nsim, burn_in, sigma));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_intRinsic_log_Likelihood_double", (DL_FUNC) &_intRinsic_log_Likelihood_double, 2},
    {"_intRinsic_Groups_quantities", (DL_FUNC) &_intRinsic_Groups_quantities, 3},
    {"_intRinsic_Norm_Constant_Z_l2", (DL_FUNC) &_intRinsic_Norm_Constant_Z_l2, 4},
    {"_intRinsic_index_row_col", (DL_FUNC) &_intRinsic_index_row_col, 3},
    {"_intRinsic_Update_memberships_faster", (DL_FUNC) &_intRinsic_Update_memberships_faster, 13},
    {"_intRinsic_Postprocessing_Chains", (DL_FUNC) &_intRinsic_Postprocessing_Chains, 2},
    {"_intRinsic_rtgamma_once", (DL_FUNC) &_intRinsic_rtgamma_once, 4},
    {"_intRinsic_UPD_d_TRUNC", (DL_FUNC) &_intRinsic_UPD_d_TRUNC, 5},
    {"_intRinsic_UPD_d_TRUNC_MASS", (DL_FUNC) &_intRinsic_UPD_d_TRUNC_MASS, 6},
    {"_intRinsic_gride_log_likelihood", (DL_FUNC) &_intRinsic_gride_log_likelihood, 4},
    {"_intRinsic_gride_log_posterior", (DL_FUNC) &_intRinsic_gride_log_posterior, 6},
    {"_intRinsic_gride_mh_sampler", (DL_FUNC) &_intRinsic_gride_mh_sampler, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_intRinsic(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
